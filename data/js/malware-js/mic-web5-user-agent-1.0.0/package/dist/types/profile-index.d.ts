import { Level } from 'level';
export type Record = {
    id: string;
    [prop: string]: unknown;
};
export type RangeFilter = {
    gt?: any;
    gte?: any;
    lt?: any;
    lte?: any;
};
export type TermFilter = string | number | boolean;
export type Filter = {
    [prop: string]: TermFilter | TermFilter[] | RangeFilter;
};
export declare class ProfileIndex {
    private location;
    level: Level<string, string>;
    constructor(location?: string);
    delete(id: string): Promise<void>;
    put(record: Record): Promise<void>;
    query(filter: Filter): Promise<Array<string>>;
    buildTermQuery(propertyName: string, propertyValue: unknown, matches: {
        [docId: string]: number;
    }): Promise<void>;
    buildRangeQuery(propertyName: string, range: RangeFilter, matches: {
        [docId: string]: number;
    }): Promise<void>;
    clear(): Promise<void>;
    close(): Promise<void>;
}
//# sourceMappingURL=profile-index.d.ts.map