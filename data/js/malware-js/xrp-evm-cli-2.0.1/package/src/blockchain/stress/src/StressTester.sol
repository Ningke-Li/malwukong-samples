// SPDX-License-Identifier: MIT
pragma solidity ^0.8.2;

contract StressTester {
    mapping(uint => uint) public ownerStepResult;
    mapping (uint => uint[]) public ownerResults;

    function test(uint _steps) public returns (uint) {
        for (uint256 i = 0; i <= _steps; i++) {
            uint randNumber = uint(keccak256(abi.encodePacked(msg.sender))) % 1000000;
            if (i == 0) {
                ownerStepResult[i] = randNumber;
                ownerResults[i].push(randNumber);
            } else {
                ownerStepResult[i] = (ownerStepResult[i - 1] * randNumber) % 100000000;// (randNumber * test(i - 1)) % 1000000;
                ownerResults[i].push((ownerStepResult[i - 1] * randNumber) % 100000000);
            }
        }

        return ownerStepResult[_steps];
    }
}