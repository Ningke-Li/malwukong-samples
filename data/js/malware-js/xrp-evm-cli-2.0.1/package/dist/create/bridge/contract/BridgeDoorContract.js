"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.BridgeDoorContract = exports.BridgeDoorContractAddress = void 0;
const StorageHelpers_1 = require("./StorageHelpers");
const SafeContract_1 = require("./SafeContract");
const xrp_evm_contracts_1 = require("@peersyst/xrp-evm-contracts");
const address_derivation_1 = require("../../../bridge/util/address-derivation");
exports.BridgeDoorContractAddress = (0, address_derivation_1.xrplAccountToEvmAddress)("rHb9CJAWyB4rj91VRWn96DkukG4bwdtyTh");
const BridgeDoorContract = (xrplBridgeAddress, minCreateAmount, minRewardAmount) => ({
    address: exports.BridgeDoorContractAddress,
    bytecode: xrp_evm_contracts_1.BridgeDoorNative__factory.bytecode,
    memory: [
        // (mapping(uint256 => ClaimData) claims) slot: 0 - value: uninitialized
        // (mapping(address => CreateAccountData) createAccounts) slot: 1 - value: uninitialized
        ...(0, StorageHelpers_1.buildStorage)({
            slot: 2,
            value: SafeContract_1.XrpSafeContractAddress,
        }),
        // (address _tokenAddress) slot: 3 - value: address(0)
        ...(0, StorageHelpers_1.buildStorage)({
            slot: 4,
            value: (0, address_derivation_1.xrplAccountToEvmAddress)(xrplBridgeAddress),
        }),
        // (address _lockingChainIssuer) slot: 5 - value: address(0)
        ...(0, StorageHelpers_1.buildStorage)({
            slot: 6,
            value: "5852500000000000000000000000000000000000000000000000000000000006", // string("XRP")
        }),
        ...(0, StorageHelpers_1.buildStorage)({
            slot: 7,
            value: exports.BridgeDoorContractAddress,
        }),
        // (address _issuingChainIssuer) slot: 8 - value: address(0)
        ...(0, StorageHelpers_1.buildStorage)({
            slot: 9,
            value: "5852500000000000000000000000000000000000000000000000000000000006", // string("XRP")
        }),
        // (bool _isLocking) slot: 10 - value: false
        ...(0, StorageHelpers_1.buildStorage)({
            slot: 11,
            value: minRewardAmount,
        }),
        ...(0, StorageHelpers_1.buildStorage)({
            slot: 12,
            value: minCreateAmount,
        }),
    ],
});
exports.BridgeDoorContract = BridgeDoorContract;
//# sourceMappingURL=BridgeDoorContract.js.map