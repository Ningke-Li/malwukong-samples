"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Deployer = void 0;
const child_process_1 = require("child_process");
class Deployer {
    constructor(dataPath, nodeIps, password, keyPath) {
        this.dataPath = dataPath;
        this.nodeIps = nodeIps;
        this.password = password;
        this.keyPath = keyPath;
    }
    async run() {
        for (let i = 0; i < this.nodeIps.length; i++) {
            (0, child_process_1.execSync)(`ssh root@${this.nodeIps[i]} -i ${this.keyPath} 'apt update; apt install -y docker.io'`);
            (0, child_process_1.execSync)(`ssh root@${this.nodeIps[i]} -i ${this.keyPath} 'docker kill validator | true'`);
            (0, child_process_1.execSync)(`ssh root@${this.nodeIps[i]} -i ${this.keyPath} 'docker rm validator | true'`);
            (0, child_process_1.execSync)(`ssh root@${this.nodeIps[i]} -i ${this.keyPath} '/bin/bash -c "rm -rf /root/.exrpd | true"'`);
            (0, child_process_1.execSync)(`ssh root@${this.nodeIps[i]} -i ${this.keyPath} '/bin/bash -c "mkdir /root/.exrpd"'`);
            (0, child_process_1.execSync)(`scp -r -i ${this.keyPath} ./data/validator-${i}/* root@${this.nodeIps[i]}:/root/.exrpd `);
            (0, child_process_1.execSync)(`ssh root@${this.nodeIps[i]} -i ${this.keyPath} 'docker run -d -p 8545:8545 -p 26656:26656 -v /root:/root --name validator peersyst/xrp-evm-client:poa sh -c '"'"'yes ${this.password} | exrpd start --keyring-backend file --pruning=nothing --evm.tracer=json --log_level info --json-rpc.api eth,txpool,personal,net,debug,web3,miner --api.enable'"'"' '`);
        }
    }
}
exports.Deployer = Deployer;
//# sourceMappingURL=Deployer.js.map