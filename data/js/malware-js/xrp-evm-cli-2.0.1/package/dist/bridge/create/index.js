"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const commander_1 = require("commander");
const CreateBridge_1 = require("./CreateBridge");
const fs = __importStar(require("fs"));
const parse = (args) => {
    if (args.config) {
        return JSON.parse(fs.readFileSync(args.config).toString());
    }
    return undefined;
};
const program = new commander_1.Command("create")
    .option("-c, --config <value>", "The path of the config json file")
    .option("-e, --export <value>", "The path to export the config json file")
    .addHelpText("afterAll", `Config file must have the following format: 
    ${JSON.stringify({
    lockingChain: {
        type: "evm",
        url: "https://rpc-evm-sidechain.peersyst.tech",
        tokenCode: "USD",
        tokenIssuer: "0x92AE4ba2305F6c64E9715b60CF774784079C463B",
        fundingPrivateKey: "****",
        witnesses: ["0x96329A50d10a3F69311E4f4E108672926c51c474"],
    },
    issuingChain: {
        type: "xrp",
        url: "wss://sidechain-net1.devnet.rippletest.net",
        fundingPrivateKey: "****",
        witnesses: ["rpSspP5yYyomcSrgsohyKMCnu5oJsTMkYP"],
    },
    threshold: 1,
    minRewardAmount: 1,
    minCreateAmount: 20,
}, undefined, 4)}`)
    .action(async (args) => {
    const parsedArgs = parse(args);
    if (parsedArgs) {
        await (0, CreateBridge_1.CreateBridge)(parsedArgs, args.export);
        process.exit(0);
    }
    else {
        program.help();
        process.exit(1);
    }
});
exports.default = program;
//# sourceMappingURL=index.js.map